version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: journaling_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-journaling_app}
      POSTGRES_USER: ${POSTGRES_USER:-journal_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-journal_pass}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-journal_user} -d ${POSTGRES_DB:-journaling_app}"]
      interval: 5s
      timeout: 3s
      retries: 12

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: journaling_backend
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://journal_user:journal_pass@postgres:5432/journaling_app}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-http://localhost:5173}
      GROQ_API_KEY: ${GROQ_API_KEY:-}
      GROQ_MODEL: ${GROQ_MODEL:-llama-3.1-8b-instant}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped

  frontend:
    # React lives at repo root (package.json + src/)
    build:
      context: .
      dockerfile: ./Dockerfile.frontend
      args:
        VITE_API_URL: ${PUBLIC_API_URL:-http://localhost:8000}
        VITE_DEMO_TOKEN: ${VITE_DEMO_TOKEN:-super-secret-demo-token}
    container_name: journaling_frontend
    depends_on:
      - backend
    ports:
      - "5173:80"
    restart: unless-stopped

volumes:
  dbdata:
